on: [push]

jobs:
  run-on-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create variables for module cacher
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@verbose
        with:
          modules-to-cache: PSFramework, Pester, dbatools:1.0.1
      - name: Run module cacher action
        id: cacher
        uses: actions/cache@v2
        with:
          path: ${{ steps.psmodulecache.outputs.modulepath }}
          key: ${{ steps.psmodulecache.outputs.keygen }}
      - name: Install PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        uses: potatoqualitee/psmodulecache@verbose
        with:
          modules-to-cache-final: ${{ steps.psmodulecache.outputs.modules-to-cache }}
      - name: Show that the Action works
        shell: pwsh
        run: |
          Get-Module -Name dbatools -ListAvailable | Select Path
          Import-Module PSFramework

  run-on-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create variables for module cacher
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@verbose
        with:
          modules-to-cache: PSFramework, Pester, dbatools
      - name: Run module cacher action
        id: cacher
        uses: actions/cache@v2
        with:
          path: ${{ steps.psmodulecache.outputs.modulepath }}
          key: ${{ steps.psmodulecache.outputs.keygen }}
      - name: Install PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        uses: potatoqualitee/psmodulecache@verbose
        with:
          modules-to-cache-final: ${{ steps.psmodulecache.outputs.modules-to-cache }}
      - name: Show that the Action works
        shell: pwsh
        run: |
          Get-Module -Name dbatools -ListAvailable | Select Path
          Import-Module PSFramework
